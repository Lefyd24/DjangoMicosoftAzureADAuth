"""
Django settings for AzureAuthTemplate project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from environs import Env

# Load environment variables
env = Env()
env.read_env() 

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY", default="django-insecure-f+@92gzld)2dq+@1izi5awz@7v-%n%lrc#kwl+eyf=l%^te1mm")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=True)

ALLOWED_HOSTS = []

# Azure Auth Specific Settings
AZURE_AUTH = {
    "CLIENT_ID": env.str("AZURE_CLIENT_ID"),
    "CLIENT_SECRET": env.str("AZURE_CLIENT_SECRET"),
    # REDIRECT_URI must be set to one of
    # - an absolute URI starting with "http" or "https", e. g. https://<domain>/azure_auth/callback
    # - a relative URI starting with "/", e. g. /azure_auth/callback
    # - a call to reverse_lazy, e. g. reverse_lazy("azure_auth:callback")
    "REDIRECT_URI": "http://localhost:8000/azure_auth/callback", # Replace with your redirect URI
    "SCOPES": env.list("AZURE_SCOPES"),
    "AUTHORITY": env.str("AZURE_AUTHORITY", default="https://login.microsoftonline.com/") + env.str("AZURE_TENANT_ID", default="common"),   # Or https://login.microsoftonline.com/common if multi-tenant
    #"LOGOUT_URI": reverse_lazy("logout"),    # Optional
    # "PUBLIC_URLS": ["<public:view_name>",],  # Optional, public views accessible by non-authenticated users
    # "PUBLIC_PATHS": ['/go/',],  # Optional, public paths accessible by non-authenticated users
    
    "ROLES": {
        "xxx-xxx-xxx-xxx-xxx": "RoleName", # IMPORTANT: replace with your actual role ID and name, If you don't have any roles, comment out this line
    },  # Optional, will add user to django group if user is in EntraID group
    
    "USERNAME_ATTRIBUTE": "displayName",   # The AAD attribute or ID token claim you want to use as the value for the user model `USERNAME_FIELD`
    "GROUP_ATTRIBUTE": "roles",   # The AAD attribute or ID token claim you want to use as the value for the user's group memberships
    "EXTRA_FIELDS": ["givenName", "mail", "officeLocation", "jobTitle", "id", ], # Optional, extra AAD user profile attributes you want to make available in the user mapping function
    #"USER_MAPPING_FN": "mitsisadmin.new_context_protocol.user_mapping_fn", # Optional, path to the function used to map the AAD to Django attributes
    "GRAPH_USER_ENDPOINT": "https://graph.microsoft.com/v1.0/me", # Optional, URL to the Graph endpoint that returns user info
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "azure_auth", # Azure AD authentication app
    "testapp", # Your test application
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # After authentication/session middleware, attach azure_user to request
    'testapp.middleware.AzureUserMiddleware',
]

AUTHENTICATION_BACKENDS = ("AzureAuthTemplate.backends.CustomAzureBackend",) # Use the custom backend

ROOT_URLCONF = 'AzureAuthTemplate.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                    # provide azure_user in template context
                    'testapp.context_processors.azure_user_context',
            ],
        },
    },
]


WSGI_APPLICATION = 'AzureAuthTemplate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
